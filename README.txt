Александр Бугаев

shitter.com


На начальной странице отобразится случайная новость из db (если они есть).
При регистрации указываем логин и пароль, фамилию и имя, город, дату рождения и немного о себе (необязательно).

В профиле хранится информация о пользователе и его список его подписчиков; можно отредактировать свой профиль: сменить пароль, дату рождения, город, аватарку.
Можно подписываться на других пользователей.
Можно создавать записи, редактировать их и удалять.
Чтобы создать запись нужно написать заголовок и основную часть, выбрать категорию.
Новости можно комментировать и ставить отметки 'нравится'.

После авторизации в боковом меню будет 4 пункта:
- Новости: лента новостей, отсортированных по дате (от новых к старым)
- Категории: просмотр новостей по категориям; 8 категорий: Спорт, Музыка, Политика, IT, Искусство, Наука, Юмор, Другое
- Подписки: список подписок пользователя
- Понравившееся: список понравившихся новостей

db.
Три таблички: users, news, comments.
Отношения:
- users -> news
- news -> comments
- users -> comments

api.
Реализован через flask-restful.
Через запросы также можно смотреть информацию о пользователях; смотреть, создавать, редактировать и удалять новости; оставлять и удалять комментарии.
Для всего этого пользователь должен авторизоваться.
Для авторизации используются jwt токены - закодированные json словари с информацией о пользователе.
Через api/login или api/register пользователю выдается токен.
Получив токен, пользователь должен оставлять его в заголовке 'Authorization'.
Токен истекает и становится недействительным через 24 часа.
Пример:
	token = post('http://webyl.herokuapp.com/api/login', json={'email': 'a@a', 'password': 'password'}).json()
	print(get('http://webyl.herokuapp.com/api/news', headers={'Authorization': token['token']}).json())

При регистрации через api дата рождения указывается в формате d/m/Y.    например: 01/01/1999

Библиотеки:
- flask
- flask-login
- flask-restful
- flask-jwt-simple
- sqlalchemy
- sqlalchemy_serializer
- PIL
- random
- datetime
- os
